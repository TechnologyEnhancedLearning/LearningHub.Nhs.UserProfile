name: Deploy UserProfile to Prod
on:
  push:
    branches:
      - prod
  workflow_dispatch:
  
permissions:
  id-token: write
  contents: read

jobs:
  deploylearningcredentials:
    runs-on: windows-latest
    environment: prod

    name: 'Deploy UserProfile'
    env:
      ARM_CLIENT_ID: ${{ secrets.AZURE_CLIENT_ID }}
      ARM_CLIENT_SECRET: ${{ secrets.AZURE_CLIENT_SECRET }}
      ARM_SUBSCRIPTION_ID: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
      ARM_TENANT_ID: ${{ secrets.AZURE_TENANT_ID }}

    steps:
      - uses: actions/checkout@v2

      - name: 'Az CLI login'
        uses: azure/login@v1
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_wrapper: false  # Skip wrapper script installation

      - name: 'Terraform init'
        id: init
        run: |
          cd LearningHub.Nhs.UserProfileUI/Terraform
          terraform init "-backend-config=backend-prod.tfvars"

      # - name: 'Terraform destroy'
      #   id: destroy
      #   run: |
      #     cd LearningHub.Nhs.UserProfileUI/Terraform
      #     terraform destroy -auto-approve -var="ResourceGroupName=${{ vars.AZURE_RESOURCE_GROUP_NAME }}" -var="ResourceGroupLocation=${{ vars.AZURE_RESOURCE_GROUP_LOCATION}}" -var="WebAppName=${{ vars.AZURE_WEB_APP_NAME }}" -var="AppServicePlanName=${{ vars.AZURE_WEB_APP_SERVICE_PLAN_NAME }}"

      - name: 'Terraform apply'
        id: apply
        run: |
          cd LearningHub.Nhs.UserProfileUI/Terraform
          terraform apply -auto-approve -var="ResourceGroupName=${{ vars.AZURE_RESOURCE_GROUP_NAME }}" -var="ResourceGroupLocation=${{ vars.AZURE_RESOURCE_GROUP_LOCATION }}" -var="WebAppName=${{ vars.AZURE_WEB_APP_NAME }}" -var="AppServicePlanName=${{ vars.AZURE_WEB_APP_SERVICE_PLAN_NAME }}"

      - name: Setup .NET Core
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: '6.0.x'

      - name: Add Nuget source
        run: dotnet nuget add source 'https://pkgs.dev.azure.com/e-LfH/_packaging/LearningHubFeed/nuget/v3/index.json' --name 'LearningHubFeed'  --username 'colin.beeby' --password ${{ secrets.AZURE_DEVOPS_PAT }} --store-password-in-clear-text      
      

      - name: Perform variable substitution
        uses: microsoft/variable-substitution@v1
        with:
          files: '**/appsettings.json'
        env:
          Environment: 'Development'
          ConnectionStrings.NLogDb: ${{ secrets.NLOG_DB }}
          ConnectionStrings.LearningHubRedis: ${{ secrets.LEARNING_HUB_REDIS }}
          WebSettings.BuildNumber: ${{ vars.WEB_SETTINGS_BUILD_NUMBER }}
          WebSettings.UserProfileUrl: ${{ vars.WEB_SETTINGS_USER_PROFILE_URL }}
          WebSettings.LearningCredentialsApiUrl: ${{ vars.WEB_SETTINGS_LEARNING_CREDENTIALS_API_URL }}
          WebSettings.UserApiUrl: ${{ vars.WEB_SETTINGS_USER_API_URL }}
          WebSettings.AuthenticationServiceUrl: ${{ vars.AUTH_SERVICE_URL }}
          WebSettings.AuthClientSecret: ${{ secrets.WEB_SETTINGS_AUTH_CLIENT_SECRET }}
          WebSettings.AuthClientId: ${{ vars.WEB_SETTINGS_AUTH_CLIENT_ID }}
          WebSettings.DspSettings.HEEOrgIdentifier: ${{ secrets.WEB_SETTINGS_DSP_SETTINGS_HEE_ORG_IDENTIFIER }}
          WebSettings.DspSettings.DspGatewayUrl: ${{ vars.WEB_SETTINGS_DSP_SETTINGS_DSP_GATEWAY_URL }}
          WebSettings.DspSettings.ClientId: ${{ vars.WEB_SETTINGS_DSP_SETTINGS_CLIENT_ID }}
          WebSettings.DspSettings.ClientSecret: ${{ secrets.WEB_SETTINGS_DSP_SETTINGS_CLIENT_SECRET }}
          WebSettings.DspSettings.SigningKey: ${{ secrets.WEB_SETTINGS_DSP_SETTINGS_SIGNING_KEY }}

      - name: Extract version from tag
        id: vars
        if: startsWith(github.ref, 'refs/tags/v')
        run: |
          $TAG = git describe --tags --abbrev=0
          $VERSION = $TAG -replace '^v', ''
          echo "VERSION=$VERSION" >> $env:GITHUB_ENV

      - name: Update assembly version in .csproj
        if: startsWith(github.ref, 'refs/tags/v')
        run: |
          (Get-Content **/LearningHub.Nhs.UserProfileUI.csproj) -replace '<AssemblyVersion>.*</AssemblyVersion>', "<AssemblyVersion>${{ env.VERSION }}</AssemblyVersion>" | Set-Content **/LearningHub.Nhs.UserProfileUI.csproj
          (Get-Content **/LearningHub.Nhs.UserProfileUI.csproj) -replace '<FileVersion>.*</FileVersion>', "<FileVersion>${{ env.VERSION }}</FileVersion>" | Set-Content **/LearningHub.Nhs.UserProfileUI.csproj
          (Get-Content **/LearningHub.Nhs.UserProfileUI.csproj) -replace '<Version>.*</Version>', "<Version>${{ env.VERSION }}</Version>" | Set-Content **/LearningHub.Nhs.UserProfileUI.csproj
      
          
      - name: dotnet build and publish
        run: |
          dotnet restore
          dotnet build --configuration Release
          dotnet publish -c Release -o ./myapp

      - name: 'Run Azure webapp deploy action using publish profile credentials'
        uses: azure/webapps-deploy@v2
        with: 
          app-name: ${{ vars.AZURE_WEB_APP_NAME }}
          package: ./myapp

      - name: logout
        run: |
          az logout
